## Server Connection
#server.port=${PORT:8070}
#server.servlet.context-path=/api/v1

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "Todo"
spring.datasource.url = ${SPRING_DATASOURCE_URL:jdbc:mysql://${DB_HOST:localhost}:3306/mydb?createDatabaseIfNotExist=true&userSSL=false&serverTimezone=UTC}


# Username and secret
spring.datasource.username =  ${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password = ${SPRING_DATASOURCE_PASSWORD:pass}
spring.datasource.initialization-mode=always


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query for debugging purposes. NB make sure to turn this off in production to avoid leaking some information
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

